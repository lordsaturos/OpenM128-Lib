__start:
__text_start:
    0013 EDCF      LDI	R28,0xDF
    0014 E0D0      LDI	R29,0
    0015 BFCD      OUT	0x3D,R28
    0016 BFDE      OUT	0x3E,R29
    0017 51C0      SUBI	R28,0x10
    0018 40D0      SBCI	R29,0
    0019 EA0A      LDI	R16,0xAA
    001A 8308      STD	Y+0,R16
    001B 2400      CLR	R0
    001C E6E0      LDI	R30,0x60
    001D E0F0      LDI	R31,0
    001E E010      LDI	R17,0
    001F 36E0      CPI	R30,0x60
    0020 07F1      CPC	R31,R17
    0021 F011      BEQ	0x0024
    0022 9201      ST	R0,Z+
    0023 CFFB      RJMP	0x001F
    0024 8300      STD	Z+0,R16
    0025 E2E6      LDI	R30,0x26
    0026 E0F0      LDI	R31,0
    0027 E6A0      LDI	R26,0x60
    0028 E0B0      LDI	R27,0
    0029 E010      LDI	R17,0
    002A 32E6      CPI	R30,0x26
    002B 07F1      CPC	R31,R17
    002C F021      BEQ	0x0031
    002D 95C8      LPM
    002E 9631      ADIW	R30,1
    002F 920D      ST	R0,X+
    0030 CFF9      RJMP	0x002A
    0031 D03D      RCALL	_main
_exit:
    0032 CFFF      RJMP	_exit
_delay50us:
  j                    --> R20
  t                    --> R16
    0033 D054      RCALL	push_gset1
FILE: E:\USBTOOLS_CD\FT245E~1\目标MCU源程序\T2313TEST\TEST_FT245.C
(0001) #include <iot2313v.h>
(0002) #include <macros.h>
(0003) 
(0004) typedef unsigned char	uint8;
(0005) typedef unsigned int	uint16;
(0006) typedef signed  char	sint8;
(0007) typedef signed	int		sint16;
(0008) 
(0009) #define sbi(io,bit)		(  io |=  (1<<bit) )	//example: sbi(PORTA,0);sbi(DDRA,0);
(0010) #define cbi(io,bit)		(  io &= ~(1<<bit) )	//example: cbi(PORTA,0);cbi(DDRA,0);
(0011) #define gbi(pin ,bit)	( pin &   (1<<bit) )	//example: gbi(PINA,0);
(0012) 
(0013) #define DATA_DDR   DDRB
(0014) #define DATA_PORT  PORTB
(0015) 
(0016) #define IN_RD_EN    cbi(DDRD,3)      //PD3
(0017) #define SET_RD_EN   sbi(PORTD,3)
(0018) #define GET_RD_EN   gbi(PIND,3)
(0019) 
(0020) #define IN_WR_EN    cbi(DDRD,2)      //PD2
(0021) #define SET_WR_EN   sbi(PORTD,2)
(0022) #define GET_WR_EN   gbi(PIND,2)
(0023) 
(0024) #define IN_RXF      cbi(DDRD,0)      //PD0
(0025) #define SET_RXF     sbi(PORTD,0)
(0026) #define GET_RXF     gbi(PIND,0)
(0027) 
(0028) #define IN_TXE      cbi(DDRD,1)      //PD1
(0029) #define SET_TXE     sbi(PORTD,1)
(0030) #define GET_TXE     gbi(PIND,1)
(0031) 
(0032) #define OUT_RD      sbi(DDRD,4)      //PD4
(0033) #define RD_ON       sbi(PORTD,4)
(0034) #define RD_OFF      cbi(PORTD,4)
(0035) 
(0036) #define OUT_WR      sbi(DDRD,5)      //PD5
(0037) #define WR_ON       sbi(PORTD,5)
(0038) #define WR_OFF      cbi(PORTD,5)
(0039) 
(0040) void delay50us(sint16 t)
(0041) {
(0042)     uint8 j;		
(0043)     for(;t>0;t--)			
    0034 C007      RJMP	0x003C
(0044)         for(j=0;j<70;j++)	
    0035 2744      CLR	R20
    0036 C001      RJMP	0x0038
    0037 9543      INC	R20
    0038 3446      CPI	R20,0x46
    0039 F3E8      BCS	0x0037
    003A 5001      SUBI	R16,1
    003B 4010      SBCI	R17,0
    003C 2422      CLR	R2
    003D 2433      CLR	R3
    003E 1620      CP	R2,R16
    003F 0631      CPC	R3,R17
    0040 F3A4      BLT	0x0035
    0041 D049      RCALL	pop_gset1
    0042 9508      RET
_delay50ms:
  i                    --> R20
  t                    --> R16
    0043 D044      RCALL	push_gset1
(0045)             ;
(0046) }
(0047) 
(0048) void delay50ms(sint16 t)
(0049) {
(0050) 	uint16 i; 
(0051) 	for(;t>0;t--)
    0044 C00B      RJMP	0x0050
(0052) 		for(i=0;i<52642;i++)
    0045 2744      CLR	R20
    0046 2755      CLR	R21
    0047 C002      RJMP	0x004A
    0048 5F4F      SUBI	R20,0xFF
    0049 4F5F      SBCI	R21,0xFF
    004A 3A42      CPI	R20,0xA2
    004B ECED      LDI	R30,0xCD
    004C 075E      CPC	R21,R30
    004D F3D0      BCS	0x0048
    004E 5001      SUBI	R16,1
    004F 4010      SBCI	R17,0
    0050 2422      CLR	R2
    0051 2433      CLR	R3
    0052 1620      CP	R2,R16
    0053 0631      CPC	R3,R17
    0054 F384      BLT	0x0045
    0055 D035      RCALL	pop_gset1
    0056 9508      RET
(0053) 			; 
(0054) }
(0055) 
(0056) void write_to_ft245()
(0057) {
(0058)     DATA_PORT++;
_write_to_ft245:
    0057 B388      IN	R24,0x18
    0058 5F8F      SUBI	R24,0xFF
    0059 BB88      OUT	0x18,R24
(0059)     delay50ms(10);
    005A E00A      LDI	R16,0xA
    005B E010      LDI	R17,0
    005C DFE6      RCALL	_delay50ms
(0060)     WR_OFF;
    005D 9895      CBI	0x12,5
(0061)     delay50us(10);
    005E E00A      LDI	R16,0xA
    005F E010      LDI	R17,0
    0060 DFD2      RCALL	_delay50us
(0062)     WR_ON;
    0061 9A95      SBI	0x12,5
(0063)     delay50us(10);
    0062 E00A      LDI	R16,0xA
    0063 E010      LDI	R17,0
    0064 DFCE      RCALL	_delay50us
    0065 9508      RET
(0064) }
(0065) 
(0066) void read_from_ft245()
(0067) {
(0068)     RD_OFF;
_read_from_ft245:
    0066 9894      CBI	0x12,4
(0069)     delay50us(10);
    0067 E00A      LDI	R16,0xA
    0068 E010      LDI	R17,0
    0069 DFC9      RCALL	_delay50us
(0070)     RD_ON;
    006A 9A94      SBI	0x12,4
(0071)     delay50us(10);
    006B E00A      LDI	R16,0xA
    006C E010      LDI	R17,0
    006D DFC5      RCALL	_delay50us
    006E 9508      RET
(0072) }
(0073) 
(0074) void main()
(0075) {
(0076)     uint8 i,j;
(0077) 
(0078)     DATA_DDR=0XFF;
_main:
  j                    --> Y+1
  i                    --> Y+1
    006F EF8F      LDI	R24,0xFF
    0070 BB87      OUT	0x17,R24
(0079)     OUT_WR;
    0071 9A8D      SBI	0x11,5
(0080)     OUT_RD;
    0072 9A8C      SBI	0x11,4
(0081)     IN_WR_EN;
    0073 988A      CBI	0x11,2
(0082)     IN_RD_EN;
    0074 988B      CBI	0x11,3
    0075 C008      RJMP	0x007E
(0083) 
(0084)     while(1)
(0085)     {
(0086)         SET_WR_EN;
    0076 9A92      SBI	0x12,2
(0087)         if(!GET_WR_EN)
    0077 9982      SBIC	0x10,2
    0078 C001      RJMP	0x007A
(0088)             write_to_ft245();
    0079 DFDD      RCALL	_write_to_ft245
(0089) 
(0090)         SET_RD_EN;
    007A 9A93      SBI	0x12,3
(0091)         if(!GET_RD_EN)
    007B 9983      SBIC	0x10,3
    007C C001      RJMP	0x007E
(0092)             read_from_ft245();
FILE: <library>
    007D DFE8      RCALL	_read_from_ft245
    007E CFF7      RJMP	0x0076
    007F 9508      RET
push_gset5:
    0080 92FA      ST	R15,-Y
    0081 92EA      ST	R14,-Y
push_gset4:
    0082 92DA      ST	R13,-Y
    0083 92CA      ST	R12,-Y
push_gset3:
    0084 92BA      ST	R11,-Y
    0085 92AA      ST	R10,-Y
push_gset2:
    0086 937A      ST	R23,-Y
    0087 936A      ST	R22,-Y
push_gset1:
    0088 935A      ST	R21,-Y
    0089 934A      ST	R20,-Y
    008A 9508      RET
pop_gset1:
    008B E0E1      LDI	R30,1
pop:
    008C 9149      LD	R20,Y+
    008D 9159      LD	R21,Y+
    008E FDE0      SBRC	R30,0
    008F 9508      RET
    0090 9169      LD	R22,Y+
    0091 9179      LD	R23,Y+
    0092 FDE1      SBRC	R30,1
    0093 9508      RET
    0094 90A9      LD	R10,Y+
    0095 90B9      LD	R11,Y+
    0096 FDE2      SBRC	R30,2
    0097 9508      RET
    0098 90C9      LD	R12,Y+
    0099 90D9      LD	R13,Y+
    009A FDE3      SBRC	R30,3
    009B 9508      RET
    009C 90E9      LD	R14,Y+
    009D 90F9      LD	R15,Y+
    009E 9508      RET
