
PWM_EXAMPLE.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000094  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  000000e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000001b  00000000  00000000  00000108  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000106  00000000  00000000  00000123  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 0000009f  00000000  00000000  00000229  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   0000011d  00000000  00000000  000002c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000020  00000000  00000000  000003e8  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000d4  00000000  00000000  00000408  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000018  00000000  00000000  000004dc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
   4:	0c 94 38 00 	jmp	0x70	; 0x70 <__bad_interrupt>
   8:	0c 94 38 00 	jmp	0x70	; 0x70 <__bad_interrupt>
   c:	0c 94 38 00 	jmp	0x70	; 0x70 <__bad_interrupt>
  10:	0c 94 38 00 	jmp	0x70	; 0x70 <__bad_interrupt>
  14:	0c 94 38 00 	jmp	0x70	; 0x70 <__bad_interrupt>
  18:	0c 94 38 00 	jmp	0x70	; 0x70 <__bad_interrupt>
  1c:	0c 94 38 00 	jmp	0x70	; 0x70 <__bad_interrupt>
  20:	0c 94 38 00 	jmp	0x70	; 0x70 <__bad_interrupt>
  24:	0c 94 38 00 	jmp	0x70	; 0x70 <__bad_interrupt>
  28:	0c 94 38 00 	jmp	0x70	; 0x70 <__bad_interrupt>
  2c:	0c 94 38 00 	jmp	0x70	; 0x70 <__bad_interrupt>
  30:	0c 94 38 00 	jmp	0x70	; 0x70 <__bad_interrupt>
  34:	0c 94 38 00 	jmp	0x70	; 0x70 <__bad_interrupt>
  38:	0c 94 38 00 	jmp	0x70	; 0x70 <__bad_interrupt>
  3c:	0c 94 38 00 	jmp	0x70	; 0x70 <__bad_interrupt>
  40:	0c 94 38 00 	jmp	0x70	; 0x70 <__bad_interrupt>
  44:	0c 94 38 00 	jmp	0x70	; 0x70 <__bad_interrupt>
  48:	0c 94 38 00 	jmp	0x70	; 0x70 <__bad_interrupt>
  4c:	0c 94 38 00 	jmp	0x70	; 0x70 <__bad_interrupt>
  50:	0c 94 38 00 	jmp	0x70	; 0x70 <__bad_interrupt>
  54:	0c 94 38 00 	jmp	0x70	; 0x70 <__bad_interrupt>
  58:	0c 94 38 00 	jmp	0x70	; 0x70 <__bad_interrupt>

0000005c <__ctors_end>:
  5c:	11 24       	eor	r1, r1
  5e:	1f be       	out	0x3f, r1	; 63
  60:	cf ef       	ldi	r28, 0xFF	; 255
  62:	d4 e0       	ldi	r29, 0x04	; 4
  64:	de bf       	out	0x3e, r29	; 62
  66:	cd bf       	out	0x3d, r28	; 61
  68:	0e 94 3a 00 	call	0x74	; 0x74 <main>
  6c:	0c 94 48 00 	jmp	0x90	; 0x90 <_exit>

00000070 <__bad_interrupt>:
  70:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000074 <main>:
*/
#include <avr/io.h>
#include <util/delay.h>
int main(void)
{
	DDRB=0xFF;
  74:	8f ef       	ldi	r24, 0xFF	; 255
  76:	84 b9       	out	0x04, r24	; 4
	TCCR0A=(1<<COM0A1)|(1<<WGM01)|(1<<WGM00)|(1<<CS00); /*快速PWM模式，匹配置一，分频因子为1*/
  78:	89 e6       	ldi	r24, 0x69	; 105
  7a:	84 bd       	out	0x24, r24	; 36
	OCR0A=0;	//将PB4(OC0A)接到LED灯上观察现象
  7c:	17 bc       	out	0x27, r1	; 39
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  7e:	20 e0       	ldi	r18, 0x00	; 0
  80:	38 e4       	ldi	r19, 0x48	; 72
  82:	c9 01       	movw	r24, r18
  84:	01 97       	sbiw	r24, 0x01	; 1
  86:	f1 f7       	brne	.-4      	; 0x84 <main+0x10>
	while(1)
	{
		_delay_ms(10);
		OCR0A++;
  88:	87 b5       	in	r24, 0x27	; 39
  8a:	8f 5f       	subi	r24, 0xFF	; 255
  8c:	87 bd       	out	0x27, r24	; 39
  8e:	f9 cf       	rjmp	.-14     	; 0x82 <main+0xe>

00000090 <_exit>:
  90:	f8 94       	cli

00000092 <__stop_program>:
  92:	ff cf       	rjmp	.-2      	; 0x92 <__stop_program>
