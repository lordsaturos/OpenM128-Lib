
74hc165.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000ac  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  00000100  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 00000039  00000000  00000000  00000120  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   000000df  00000000  00000000  00000159  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000000a1  00000000  00000000  00000238  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000186  00000000  00000000  000002d9  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000040  00000000  00000000  00000460  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    0000009e  00000000  00000000  000004a0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
   4:	0c 94 38 00 	jmp	0x70	; 0x70 <__bad_interrupt>
   8:	0c 94 38 00 	jmp	0x70	; 0x70 <__bad_interrupt>
   c:	0c 94 38 00 	jmp	0x70	; 0x70 <__bad_interrupt>
  10:	0c 94 38 00 	jmp	0x70	; 0x70 <__bad_interrupt>
  14:	0c 94 38 00 	jmp	0x70	; 0x70 <__bad_interrupt>
  18:	0c 94 38 00 	jmp	0x70	; 0x70 <__bad_interrupt>
  1c:	0c 94 38 00 	jmp	0x70	; 0x70 <__bad_interrupt>
  20:	0c 94 38 00 	jmp	0x70	; 0x70 <__bad_interrupt>
  24:	0c 94 38 00 	jmp	0x70	; 0x70 <__bad_interrupt>
  28:	0c 94 38 00 	jmp	0x70	; 0x70 <__bad_interrupt>
  2c:	0c 94 38 00 	jmp	0x70	; 0x70 <__bad_interrupt>
  30:	0c 94 38 00 	jmp	0x70	; 0x70 <__bad_interrupt>
  34:	0c 94 38 00 	jmp	0x70	; 0x70 <__bad_interrupt>
  38:	0c 94 38 00 	jmp	0x70	; 0x70 <__bad_interrupt>
  3c:	0c 94 38 00 	jmp	0x70	; 0x70 <__bad_interrupt>
  40:	0c 94 38 00 	jmp	0x70	; 0x70 <__bad_interrupt>
  44:	0c 94 38 00 	jmp	0x70	; 0x70 <__bad_interrupt>
  48:	0c 94 38 00 	jmp	0x70	; 0x70 <__bad_interrupt>
  4c:	0c 94 38 00 	jmp	0x70	; 0x70 <__bad_interrupt>
  50:	0c 94 38 00 	jmp	0x70	; 0x70 <__bad_interrupt>
  54:	0c 94 38 00 	jmp	0x70	; 0x70 <__bad_interrupt>
  58:	0c 94 38 00 	jmp	0x70	; 0x70 <__bad_interrupt>

0000005c <__ctors_end>:
  5c:	11 24       	eor	r1, r1
  5e:	1f be       	out	0x3f, r1	; 63
  60:	cf ef       	ldi	r28, 0xFF	; 255
  62:	d4 e0       	ldi	r29, 0x04	; 4
  64:	de bf       	out	0x3e, r29	; 62
  66:	cd bf       	out	0x3d, r28	; 61
  68:	0e 94 4b 00 	call	0x96	; 0x96 <main>
  6c:	0c 94 54 00 	jmp	0xa8	; 0xa8 <_exit>

00000070 <__bad_interrupt>:
  70:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000074 <hc165GetDat>:
#include <stdint.h>

uint8_t hc165GetDat()
{
	uint8_t i,dat=0;
	HC165_CLR_PL;
  74:	75 98       	cbi	0x0e, 5	; 14
	HC165_SET_PL;
  76:	75 9a       	sbi	0x0e, 5	; 14
  78:	90 e0       	ldi	r25, 0x00	; 0
  7a:	80 e0       	ldi	r24, 0x00	; 0
	for(i=0;i<8;i++)
	{
		HC165_CLR_TXD;
  7c:	71 98       	cbi	0x0e, 1	; 14
		dat = dat<<1;
  7e:	88 0f       	add	r24, r24
		if(HC165_GET_RXD)
  80:	60 99       	sbic	0x0c, 0	; 12
			dat |= 0x01;
  82:	81 60       	ori	r24, 0x01	; 1
		HC165_SET_TXD;
  84:	71 9a       	sbi	0x0e, 1	; 14
uint8_t hc165GetDat()
{
	uint8_t i,dat=0;
	HC165_CLR_PL;
	HC165_SET_PL;
	for(i=0;i<8;i++)
  86:	9f 5f       	subi	r25, 0xFF	; 255
  88:	98 30       	cpi	r25, 0x08	; 8
  8a:	c1 f7       	brne	.-16     	; 0x7c <hc165GetDat+0x8>
		if(HC165_GET_RXD)
			dat |= 0x01;
		HC165_SET_TXD;
	}
	return dat;
}
  8c:	08 95       	ret

0000008e <hc165Init>:

void hc165Init(void)
{
	HC165_OUT_PL;
  8e:	6d 9a       	sbi	0x0d, 5	; 13
	HC165_OUT_TXD;
  90:	69 9a       	sbi	0x0d, 1	; 13
	HC165_IN_RXD;
  92:	68 98       	cbi	0x0d, 0	; 13
}
  94:	08 95       	ret

00000096 <main>:
#include <avr/io.h>
#include <ws_74hc165_port.h>

int main(void)
{
	DDRA=0xFF;
  96:	8f ef       	ldi	r24, 0xFF	; 255
  98:	81 b9       	out	0x01, r24	; 1
	return dat;
}

void hc165Init(void)
{
	HC165_OUT_PL;
  9a:	6d 9a       	sbi	0x0d, 5	; 13
	HC165_OUT_TXD;
  9c:	69 9a       	sbi	0x0d, 1	; 13
	HC165_IN_RXD;
  9e:	68 98       	cbi	0x0d, 0	; 13
	hc165Init();
	while(1)
	{
		PORTA=hc165GetDat();
  a0:	0e 94 3a 00 	call	0x74	; 0x74 <hc165GetDat>
  a4:	82 b9       	out	0x02, r24	; 2
  a6:	fc cf       	rjmp	.-8      	; 0xa0 <main+0xa>

000000a8 <_exit>:
  a8:	f8 94       	cli

000000aa <__stop_program>:
  aa:	ff cf       	rjmp	.-2      	; 0xaa <__stop_program>
