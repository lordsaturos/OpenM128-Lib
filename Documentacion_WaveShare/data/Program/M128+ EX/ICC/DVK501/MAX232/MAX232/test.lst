Interrupt Vectors
    00000 C014      RJMP	__start|__text_start

Program Code (text area)
__start|__text_start:
    00015 E5CF      LDI	R28,0x5F
    00016 E0D2      LDI	R29,2
    00017 BFCD      OUT	0x3D,R28
    00018 BFDE      OUT	0x3E,R29
    00019 51C0      SUBI	R28,0x10
    0001A 40D0      SBCI	R29,0
    0001B EA0A      LDI	R16,0xAA
    0001C 8308      ST	Y,R16
    0001D 2400      CLR	R0
    0001E E6E0      LDI	R30,0x60
    0001F E0F0      LDI	R31,0
    00020 E010      LDI	R17,0
    00021 36E0      CPI	R30,0x60
    00022 07F1      CPC	R31,R17
    00023 F011      BEQ	0x0026
    00024 9201      ST	Z+,R0
    00025 CFFB      RJMP	0x0021
    00026 8300      ST	Z,R16
    00027 E2EA      LDI	R30,0x2A
    00028 E0F0      LDI	R31,0
    00029 E6A0      LDI	R26,0x60
    0002A E0B0      LDI	R27,0
    0002B E010      LDI	R17,0
    0002C E000      LDI	R16,0
    0002D BF0B      OUT	0x3B,R16
    0002E 32EA      CPI	R30,0x2A
    0002F 07F1      CPC	R31,R17
    00030 F021      BEQ	0x0035
    00031 95C8      LPM
    00032 9631      ADIW	R30,1
    00033 920D      ST	X+,R0
    00034 CFF9      RJMP	0x002E
    00035 D032      RCALL	_main
_exit:
    00036 CFFF      RJMP	_exit
FILE: E:\吴泽备份\DVK501光盘内容\M128_E~1\MAX232~1\MAX232\test.c
(0001) /*********************************************************************
(0002) 	微 雪 电 子   WaveShare   http://www.waveShare.net            	
(0003) 		                                                            
(0004) 项目名称:   MAX232示例程序
(0005) 		
(0006) 目标系统:   “DVK501” && “M128 EX+”
(0007) 
(0008) 应用软件:   ICCAVR 6.31A                                             
(0009) 		                                                                
(0010) 版    本:   V1.0 
(0011)                                                         
(0012) 圆版时间:   2009-7-1
(0013) 
(0014) 开发人员:   zz
(0015) 
(0016) 说    明:   若用于商业用途，请保留此段文字或注明代码来源
(0017) 		
(0018) 	深 圳 市 微 雪 电 子 有 限 公 司 保 留 所 有 的 版 权     
(0019) *********************************************************************/
(0020) 
(0021) /*01010101010101010101010101010101010101010101010101010101010101010101
(0022) ----------------------------------------------------------------------
(0023) 版本更新记录：
(0024) 
(0025) ----------------------------------------------------------------------
(0026) 实验内容：
(0027) 使用DVK501上的LED观察单片机发送的数据
(0028) ----------------------------------------------------------------------
(0029) 硬件连接： 
(0030) 		 	    DVK501				 M128 EX+
(0031) 				RXD1   ---------	  PE1(TXD0)
(0032) 				TXD1	---------	  PE0(RXD0)
(0033) 				将DB9接口的2脚和3脚短接
(0034) ----------------------------------------------------------------------
(0035) 注意事项：
(0036) （1）若有加载库函数，请将光盘根目录下的“库函数”下的“ICC_H”文件夹拷到D盘
(0037) （2）请详细阅读“使用必读”及相关资料。
(0038) ----------------------------------------------------------------------
(0039) 10101010101010101010101010101010101010101010101010101010101010101010*/
(0040) 
(0041) #include <iom128v.h>
(0042) 
(0043) void UART_init(void)
(0044) {
(0045) // USART0 initialization
(0046) // Communication Parameters: 8 Data, 1 Stop, No Parity
(0047) // USART0 Receiver: On
(0048) // USART0 Transmitter: On
(0049) // USART0 Mode: Asynchronous
(0050) // USART0 Baud Rate: 9600
(0051) UCSR0A=0x00;
_UART_init:
    00037 2422      CLR	R2
    00038 B82B      OUT	0x0B,R2
(0052) UCSR0B=0x18;
    00039 E188      LDI	R24,0x18
    0003A B98A      OUT	0x0A,R24
(0053) UCSR0C=0x06;
    0003B E086      LDI	R24,6
    0003C 9380 0095 STS	0x95,R24
(0054) UBRR0H=0x00;
    0003E 9220 0090 STS	0x90,R2
(0055) UBRR0L=0x2F;
    00040 E28F      LDI	R24,0x2F
    00041 B989      OUT	0x09,R24
    00042 9508      RET
(0056) }
(0057) 
(0058) 
(0059) //从RS232发送一个字节 
(0060) void uart_putchar0(char c) 
(0061) { 
(0062)     while(!(UCSR0A & 0x20));
_uart_putchar0:
  c                    --> R16
    00043 9B5D      SBIS	0x0B,5
    00044 CFFE      RJMP	_uart_putchar0
(0063)     UDR0 = c; 
    00045 B90C      OUT	0x0C,R16
    00046 9508      RET
(0064) } 
(0065) //从RS232接收一个字节 
(0066) unsigned int uart_getchar0(void) 
(0067) { 
(0068)     unsigned char status,res; 
(0069)     if(!(UCSR0A & 0x80)) return -1;        //no data to be received 
_uart_getchar0:
  res                  --> R16
  status               --> R18
    00047 995F      SBIC	0x0B,7
    00048 C003      RJMP	0x004C
    00049 EF0F      LDI	R16,0xFF
    0004A EF1F      LDI	R17,0xFF
    0004B C009      RJMP	0x0055
(0070)     status = UCSR0A; 
    0004C B12B      IN	R18,0x0B
(0071)     res = UDR0; 
    0004D B10C      IN	R16,0x0C
(0072)     if (status & 0x1c) return -1;        // If error, return -1 
    0004E 2F82      MOV	R24,R18
    0004F 718C      ANDI	R24,0x1C
    00050 F019      BEQ	0x0054
    00051 EF0F      LDI	R16,0xFF
    00052 EF1F      LDI	R17,0xFF
    00053 C001      RJMP	0x0055
(0073)     return res; 
    00054 2711      CLR	R17
    00055 9508      RET
_uart_waitchar0:
  c                    --> R10
    00056 92AA      ST	-Y,R10
    00057 92BA      ST	-Y,R11
(0074) } 
(0075) //等待从RS232接收一个有效的字节 
(0076) unsigned char uart_waitchar0(void) 
(0077) { 
(0078)     unsigned int c; 
(0079)     while((c=uart_getchar0())==-1); 
    00058 DFEE      RCALL	_uart_getchar0
    00059 0158      MOVW	R10,R16
    0005A 3F0F      CPI	R16,0xFF
    0005B EFEF      LDI	R30,0xFF
    0005C 071E      CPC	R17,R30
    0005D F3D1      BEQ	0x0058
(0080)     return (unsigned char)c; 
    0005E 90B9      LD	R11,Y+
    0005F 90A9      LD	R10,Y+
    00060 9508      RET
(0081) } 
(0082) 
(0083) void delay(void)
(0084) {
(0085)  	 unsigned char n=0xff;
_delay:
  n                    --> R16
    00061 EF0F      LDI	R16,0xFF
(0086) 	 while(n--);
    00062 2E20      MOV	R2,R16
    00063 2433      CLR	R3
    00064 5001      SUBI	R16,1
    00065 2022      TST	R2
    00066 F7D9      BNE	0x0062
    00067 9508      RET
(0087) }
(0088) 
(0089) void main(void)
(0090) {
(0091)  	DDRA=0xFF;
_main:
    00068 EF8F      LDI	R24,0xFF
    00069 BB8A      OUT	0x1A,R24
(0092)  	UART_init();
    0006A DFCC      RCALL	_UART_init
(0093) 	uart_putchar0(0x55);
    0006B E505      LDI	R16,0x55
    0006C DFD6      RCALL	_uart_putchar0
(0094) 	delay();
    0006D DFF3      RCALL	_delay
(0095) 	PORTA=uart_waitchar0();
    0006E DFE7      RCALL	_uart_waitchar0
    0006F BB0B      OUT	0x1B,R16
(0096) 	while(1);
FILE: <library>
    00070 CFFF      RJMP	0x0070
    00071 9508      RET
