/*********************************************************************
	微 雪 电 子   WaveShare   http://www.waveShare.net            	
		                                                        
目    的:   建立使用内部AD的中断示例程序
	
目标系统:   基于AVR单片机
		                                                                
应用软件:   ICCAVR
		                                                                
版    本:   Version 1.0                                                          
		                                                                
圆版时间:   2005-06-25
	
开发人员:   SEE

说    明:   若用于商业用途，请保留此段文字或注明代码来源
	
	深 圳 市 微 雪 电 子 有 限 公 司 保 留 所 有 的 版 权     
*********************************************************************/

/*01010101010101010101010101010101010101010101010101010101010101010101
----------------------------------------------------------------------
版本更新记录：

----------------------------------------------------------------------
实验内容：
使用中断检测AD0口，使用PB/PD口的LED指示AD读到的数据。
----------------------------------------------------------------------
硬件连接：
将“ADJ0.AD0”引针与“MCU.AD0” 引针使用短路帽短接。
将PB/PD口的LED指示灯使能开关切换到"ON"状态。
----------------------------------------------------------------------
注意事项： 
（1）若有加载库函数，请将光盘根目录下的“库函数”下的“ICC_H”文件夹拷到D盘
（2）请详细阅读“使用必读”及相关资料。
		
----------------------------------------------------------------------
10101010101010101010101010101010101010101010101010101010101010101010*/

#include <iom16v.h>
#include "D:\ICC_H\CmmICC.H"

#define H_VAL_DISP_DDR  DDRD
#define L_VAL_DISP_DDR  DDRB
#define H_VAL_DISP_PORT PORTD
#define L_VAL_DISP_PORT PORTB

const uint8 ADEnStatus[8] = {0xFE,0xFD,0xFB,0xF7,0xEF,0xDF,0xBF,0x7F};

uint8 AdcMux;			  //ADC通道
uint16 AdcVal;			  //ADC转换值

/*--------------------------------------------------------------------
函数名称：
函数功能：
注意事项：
提示说明：
输    入：
返    回：
--------------------------------------------------------------------*/
void adc_init()
{
/* 设置对应的IO口为输入高阻态 */
	DDRA &= ADEnStatus[AdcMux];	   
	PORTA &= ADEnStatus[AdcMux];

	ADCSRA = 0x00;				//disable adc
	ADMUX = (1<<REFS1)|(1<<REFS0)|(AdcMux&0x0F);	//select adc input channel
	ACSR = (1<<ACD);			//close analog comparator
	ADCSRA=(1<<ADEN)|(1<<ADSC)|(1<<ADIE)|(1<<ADPS2)|(1<<ADPS1); 
}
/*--------------------------------------------------------------------
函数名称：
函数功能：
注意事项：
提示说明：
输    入：
返    回：
--------------------------------------------------------------------*/
#pragma interrupt_handler adc_isr:15
void adc_isr(void)
{
	AdcVal = ADC&0x3FF;
	ADMUX = (1<<REFS0)|(AdcMux&0x0F);	//使用 AVcc 作为ADC参考电源
	ADCSRA |= (1<<ADSC);				//ADSC: AD start conversion
}
/*--------------------------------------------------------------------
函数名称：
函数功能：
注意事项：
提示说明：
输    入：
返    回：
--------------------------------------------------------------------*/
void main(void)
{
	H_VAL_DISP_DDR = 0xFF;
	L_VAL_DISP_DDR = 0xFF;
	AdcMux = 0;	   	 	  //使用ADC通道0
	adc_init(); 
	SEI(); 
	while(1)
	{  		 
		H_VAL_DISP_PORT = (AdcVal&0x300)>>8;	//ADC的高2位Val
		L_VAL_DISP_PORT = AdcVal&0xFF;			//ADC的低8位Val
	}
}
