
74hc165.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000dc  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  00000130  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 00000039  00000000  00000000  00000150  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   000000df  00000000  00000000  00000189  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000000a1  00000000  00000000  00000268  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000186  00000000  00000000  00000309  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000040  00000000  00000000  00000490  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    0000009e  00000000  00000000  000004d0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
   8:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
   c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  10:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  14:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  18:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  1c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  20:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  24:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  28:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  2c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  30:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  34:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  38:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  3c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  40:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  44:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  48:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  4c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  50:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  54:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  58:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  5c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  60:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  64:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  68:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  6c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  70:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  74:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  78:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  7c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  80:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  84:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  88:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	0e 94 63 00 	call	0xc6	; 0xc6 <main>
  9c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <_exit>

000000a0 <__bad_interrupt>:
  a0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a4 <hc165GetDat>:
#include <stdint.h>

uint8_t hc165GetDat()
{
	uint8_t i,dat=0;
	HC165_CLR_PL;
  a4:	91 98       	cbi	0x12, 1	; 18
	HC165_SET_PL;
  a6:	91 9a       	sbi	0x12, 1	; 18
  a8:	90 e0       	ldi	r25, 0x00	; 0
  aa:	80 e0       	ldi	r24, 0x00	; 0
	for(i=0;i<8;i++)
	{
		HC165_CLR_TXD;
  ac:	19 98       	cbi	0x03, 1	; 3
		dat = dat<<1;
  ae:	88 0f       	add	r24, r24
		if(HC165_GET_RXD)
  b0:	08 99       	sbic	0x01, 0	; 1
			dat |= 0x01;
  b2:	81 60       	ori	r24, 0x01	; 1
		HC165_SET_TXD;
  b4:	19 9a       	sbi	0x03, 1	; 3
uint8_t hc165GetDat()
{
	uint8_t i,dat=0;
	HC165_CLR_PL;
	HC165_SET_PL;
	for(i=0;i<8;i++)
  b6:	9f 5f       	subi	r25, 0xFF	; 255
  b8:	98 30       	cpi	r25, 0x08	; 8
  ba:	c1 f7       	brne	.-16     	; 0xac <hc165GetDat+0x8>
		if(HC165_GET_RXD)
			dat |= 0x01;
		HC165_SET_TXD;
	}
	return dat;
}
  bc:	08 95       	ret

000000be <hc165Init>:

void hc165Init(void)
{
	HC165_OUT_PL;
  be:	89 9a       	sbi	0x11, 1	; 17
	HC165_OUT_TXD;
  c0:	11 9a       	sbi	0x02, 1	; 2
	HC165_IN_RXD;
  c2:	10 98       	cbi	0x02, 0	; 2
}
  c4:	08 95       	ret

000000c6 <main>:
#include <avr/io.h>
#include <ws_74hc165_port.h>

int main(void)
{
	DDRA=0xFF;
  c6:	8f ef       	ldi	r24, 0xFF	; 255
  c8:	8a bb       	out	0x1a, r24	; 26
	return dat;
}

void hc165Init(void)
{
	HC165_OUT_PL;
  ca:	89 9a       	sbi	0x11, 1	; 17
	HC165_OUT_TXD;
  cc:	11 9a       	sbi	0x02, 1	; 2
	HC165_IN_RXD;
  ce:	10 98       	cbi	0x02, 0	; 2
	hc165Init();
	while(1)
	{
		PORTA=hc165GetDat();
  d0:	0e 94 52 00 	call	0xa4	; 0xa4 <hc165GetDat>
  d4:	8b bb       	out	0x1b, r24	; 27
  d6:	fc cf       	rjmp	.-8      	; 0xd0 <main+0xa>

000000d8 <_exit>:
  d8:	f8 94       	cli

000000da <__stop_program>:
  da:	ff cf       	rjmp	.-2      	; 0xda <__stop_program>
