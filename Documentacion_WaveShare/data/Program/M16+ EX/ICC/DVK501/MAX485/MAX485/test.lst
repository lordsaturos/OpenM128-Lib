Interrupt Vectors
    00000 940C 002A JMP	__start|__text_start

Program Code (text area)
__start|__text_start:
    0002A E5CF      LDI	R28,0x5F
    0002B E0D4      LDI	R29,4
    0002C BFCD      OUT	0x3D,R28
    0002D BFDE      OUT	0x3E,R29
    0002E 51C0      SUBI	R28,0x10
    0002F 40D0      SBCI	R29,0
    00030 EA0A      LDI	R16,0xAA
    00031 8308      ST	Y,R16
    00032 2400      CLR	R0
    00033 E6E0      LDI	R30,0x60
    00034 E0F0      LDI	R31,0
    00035 E010      LDI	R17,0
    00036 36E0      CPI	R30,0x60
    00037 07F1      CPC	R31,R17
    00038 F011      BEQ	0x003B
    00039 9201      ST	Z+,R0
    0003A CFFB      RJMP	0x0036
    0003B 8300      ST	Z,R16
    0003C E5E4      LDI	R30,0x54
    0003D E0F0      LDI	R31,0
    0003E E6A0      LDI	R26,0x60
    0003F E0B0      LDI	R27,0
    00040 E010      LDI	R17,0
    00041 E000      LDI	R16,0
    00042 BF0B      OUT	0x3B,R16
    00043 35E4      CPI	R30,0x54
    00044 07F1      CPC	R31,R17
    00045 F021      BEQ	0x004A
    00046 95C8      LPM
    00047 9631      ADIW	R30,1
    00048 920D      ST	X+,R0
    00049 CFF9      RJMP	0x0043
    0004A 940E 0075 CALL	_main
_exit:
    0004C CFFF      RJMP	_exit
FILE: E:\吴泽备份\DVK501光盘内容\STK16_~1.0\MAX485~1\MAX485\test.c
(0001) /*********************************************************************
(0002) 	微 雪 电 子   WaveShare   http://www.waveShare.net            	
(0003) 		                                                        
(0004) 目    的:   建立使用PCF8574的示例程序
(0005) 	
(0006) 目标系统:   基于AVR单片机
(0007) 		                                                                
(0008) 应用软件:   ICCAVR
(0009) 		                                                                
(0010) 版    本:   Version 1.0                                                          
(0011) 		                                                                
(0012) 圆版时间:   2009-03-31
(0013) 	
(0014) 开发人员:   zz
(0015) 
(0016) 说    明:   若用于商业用途，请保留此段文字或注明代码来源
(0017) 	
(0018) 	深 圳 市 微 雪 电 子 有 限 公 司 保 留 所 有 的 版 权     
(0019) *********************************************************************/
(0020) 
(0021) /*01010101010101010101010101010101010101010101010101010101010101010101
(0022) ----------------------------------------------------------------------
(0023) 版本更新记录：
(0024) 
(0025) ----------------------------------------------------------------------
(0026) 实验内容：
(0027) 先把写数据并显示在MX485自发自收试验
(0028) ----------------------------------------------------------------------
(0029) 硬件连接：
(0030) 		 	  DVK501				 DVK501
(0031) 				U1:A	     ---------    U2:A
(0032) 				U1:B		---------	  U2:B
(0033) 				U1:EN		---------	  VCC
(0034) 				U2:EN		---------	  GND
(0035) 	
(0036) 			  STK16+     			DVK501
(0037) 			   PA	---------  		 LED0~7
(0038) 
(0039) 			   DVK501				  STK16+
(0040) 				VCC		---------	  VCC
(0041) 				GND		---------	  GND
(0042) 				U1:DI   ---------	  PE1(TXD0)
(0043) 				U2:RO	---------	  PE0(RXD0)
(0044) 				
(0045) ----------------------------------------------------------------------
(0046) 注意事项： 
(0047) （1）若有加载库函数，请将光盘根目录下的“库函数”下的“ICC_H”文件夹拷到D盘
(0048) （2）请详细阅读“使用必读”及相关资料。
(0049) ----------------------------------------------------------------------
(0050) 10101010101010101010101010101010101010101010101010101010101010101010*/
(0051) 
(0052) #include <iom16v.h>
(0053) void UART_init(void)
(0054) {
(0055) // USART0 initialization
(0056) // Communication Parameters: 8 Data, 1 Stop, No Parity
(0057) // USART0 Receiver: On
(0058) // USART0 Transmitter: On
(0059) // USART0 Mode: Asynchronous
(0060) // USART0 Baud Rate: 9600
(0061) UCSRA=0x00;
_UART_init:
    0004D 2422      CLR	R2
    0004E B82B      OUT	0x0B,R2
(0062) UCSRB=0x18;
    0004F E188      LDI	R24,0x18
    00050 B98A      OUT	0x0A,R24
(0063) UCSRC=0x06;
    00051 E086      LDI	R24,6
    00052 BD80      OUT	0x20,R24
(0064) UBRRH=0x00;
    00053 BC20      OUT	0x20,R2
(0065) UBRRL=0x2F;
    00054 E28F      LDI	R24,0x2F
    00055 B989      OUT	0x09,R24
    00056 9508      RET
(0066) }
(0067) 
(0068) 
(0069) //从RS232发送一个字节 
(0070) void uart_putchar0(char c) 
(0071) { 
(0072)     while(!(UCSRA & 0x20));
_uart_putchar0:
  c                    --> R16
    00057 9B5D      SBIS	0x0B,5
    00058 CFFE      RJMP	_uart_putchar0
(0073)     UDR = c; 
    00059 B90C      OUT	0x0C,R16
    0005A 9508      RET
(0074) } 
(0075) //从RS232接收一个字节 
(0076) unsigned int uart_getchar0(void) 
(0077) { 
(0078)     unsigned char status,res; 
(0079)     if(!(UCSRA & 0x80)) return -1;        //no data to be received 
_uart_getchar0:
  res                  --> R16
  status               --> R18
    0005B 995F      SBIC	0x0B,7
    0005C C003      RJMP	0x0060
    0005D EF0F      LDI	R16,0xFF
    0005E EF1F      LDI	R17,0xFF
    0005F C009      RJMP	0x0069
(0080)     status = UCSRA; 
    00060 B12B      IN	R18,0x0B
(0081)     res = UDR; 
    00061 B10C      IN	R16,0x0C
(0082)     if (status & 0x1c) return -1;        // If error, return -1 
    00062 2F82      MOV	R24,R18
    00063 718C      ANDI	R24,0x1C
    00064 F019      BEQ	0x0068
    00065 EF0F      LDI	R16,0xFF
    00066 EF1F      LDI	R17,0xFF
    00067 C001      RJMP	0x0069
(0083)     return res; 
    00068 2711      CLR	R17
    00069 9508      RET
_uart_waitchar0:
  c                    --> R10
    0006A 92AA      ST	-Y,R10
    0006B 92BA      ST	-Y,R11
(0084) } 
(0085) //等待从RS232接收一个有效的字节 
(0086) unsigned char uart_waitchar0(void) 
(0087) { 
(0088)     unsigned int c; 
(0089)     while((c=uart_getchar0())==-1); 
    0006C DFEE      RCALL	_uart_getchar0
    0006D 0158      MOVW	R10,R16
    0006E 3F0F      CPI	R16,0xFF
    0006F EFEF      LDI	R30,0xFF
    00070 071E      CPC	R17,R30
    00071 F3D1      BEQ	0x006C
(0090)     return (unsigned char)c; 
    00072 90B9      LD	R11,Y+
    00073 90A9      LD	R10,Y+
    00074 9508      RET
(0091) } 
(0092) 
(0093) void main(void)
(0094) {
(0095)  	DDRA=0xFF;
_main:
    00075 EF8F      LDI	R24,0xFF
    00076 BB8A      OUT	0x1A,R24
(0096)  	UART_init();
    00077 DFD5      RCALL	_UART_init
(0097) 	uart_putchar0(0x55);
    00078 E505      LDI	R16,0x55
    00079 DFDD      RCALL	_uart_putchar0
(0098) 	
(0099) 	PORTA=uart_waitchar0();
    0007A DFEF      RCALL	_uart_waitchar0
    0007B BB0B      OUT	0x1B,R16
(0100) 	while(1);
FILE: <library>
    0007C CFFF      RJMP	0x007C
    0007D 9508      RET
