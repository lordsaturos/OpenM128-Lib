__start:
__text_start:
    002A E5CF      LDI	R28,0x5F
    002B E0D4      LDI	R29,4
    002C BFCD      OUT	0x3D,R28
    002D BFDE      OUT	0x3E,R29
    002E 51C0      SUBI	R28,0x10
    002F 40D0      SBCI	R29,0
    0030 EA0A      LDI	R16,0xAA
    0031 8308      STD	Y+0,R16
    0032 2400      CLR	R0
    0033 E6E0      LDI	R30,0x60
    0034 E0F0      LDI	R31,0
    0035 E010      LDI	R17,0
    0036 36E0      CPI	R30,0x60
    0037 07F1      CPC	R31,R17
    0038 F011      BEQ	0x003B
    0039 9201      ST	R0,Z+
    003A CFFB      RJMP	0x0036
    003B 8300      STD	Z+0,R16
    003C E5E4      LDI	R30,0x54
    003D E0F0      LDI	R31,0
    003E E6A0      LDI	R26,0x60
    003F E0B0      LDI	R27,0
    0040 E010      LDI	R17,0
    0041 35E4      CPI	R30,0x54
    0042 07F1      CPC	R31,R17
    0043 F021      BEQ	0x0048
    0044 95C8      LPM
    0045 9631      ADIW	R30,1
    0046 920D      ST	R0,X+
    0047 CFF9      RJMP	0x0041
    0048 940E0052  CALL	_main
_exit:
    004A CFFF      RJMP	_exit
FILE: E:\微雪电子CD1\产品资料\开发板实验板\SMK系列\SMK1632\实验教程\内核及主板相关实验\内核－PWM\OC0PWM\OC0PWM.C
(0001) /*********************************************************************
(0002) 	微 雪 电 子   WaveShare   http://www.waveShare.net            	
(0003) 		                                                        
(0004) 目    的:   建立使用OC0做PWM的示例程序
(0005) 	
(0006) 目标系统:   基于AVR单片机
(0007) 		                                                                
(0008) 应用软件:   ICCAVR
(0009) 		                                                                
(0010) 版    本:   Version 1.0                                                          
(0011) 		                                                                
(0012) 圆版时间:   2005-06-25
(0013) 	
(0014) 开发人员:   SEE
(0015) 
(0016) 说    明:   若用于商业用途，请保留此段文字或注明代码来源
(0017) 	
(0018) 	深 圳 市 微 雪 电 子 有 限 公 司 保 留 所 有 的 版 权     
(0019) *********************************************************************/
(0020) 
(0021) /*01010101010101010101010101010101010101010101010101010101010101010101
(0022) ---------------------------------------------------------------------
(0023) 版本更新记录：
(0024) 
(0025) ----------------------------------------------------------------------
(0026) 实验内容：
(0027) 使用UserLed作为PWM口的监控，如果PWM低速则可以观察到UserLed的闪烁。
(0028) ----------------------------------------------------------------------
(0029) 硬件连接：	
(0030) 将UserLed指示灯连接至PB3/OC0。
(0031) ----------------------------------------------------------------------
(0032) 注意事项： 
(0033) （1）若有加载库函数，请将光盘根目录下的“库函数”下的“ICC_H”文件夹拷到D盘
(0034) （2）请详细阅读：光盘根目录下的“产品资料\开发板实验板\SMK系列\SMK1632\说明资料”
(0035) 		
(0036) ----------------------------------------------------------------------
(0037) 10101010101010101010101010101010101010101010101010101010101010101010*/
(0038) 
(0039) #include <iom16v.h> 
(0040) #include <macros.h> 
(0041) 
(0042) #define OC0_OUT_EN	DDRB |= 0b00001000
(0043) 
(0044) /*--------------------------------------------------------------------
(0045) 函数名称：
(0046) 函数功能：
(0047) 注意事项：
(0048) 提示说明：
(0049) 输    入：
(0050) 返    回：
(0051) --------------------------------------------------------------------*/
(0052) void timer0_init(void) 
(0053) { 
(0054) 	TCCR0 = (1<<WGM01)|(1<<WGM00)|(1<<COM01)|(1<<COM00)|(1<<CS00);	
_timer0_init:
    004B E789      LDI	R24,0x79
    004C BF83      OUT	0x33,R24
(0055) /*
(0056) 	WGM01=1; WGM00=1; --> fast PWM modle
(0057) 	COM01=1; COM00=0; --> 比较匹配时set OC0 pin
(0058) 	CS00=1;  --> timer0 source 不经过任何分频，直接为Clk，使得PWM可以工作得足够快
(0059) */
(0060) 	TCNT0 = 0x00;			//设置TC0计数寄存器初值 
    004D 2422      CLR	R2
    004E BE22      OUT	0x32,R2
(0061) 	OCR0  = 0x10;			//输出比较寄存器初值，设置该值可用于调节占空比
    004F E180      LDI	R24,0x10
    0050 BF8C      OUT	0x3C,R24
    0051 9508      RET
(0062) } 
(0063) /*--------------------------------------------------------------------
(0064) 函数名称：
(0065) 函数功能：
(0066) 注意事项：
(0067) 提示说明：
(0068) 输    入：
(0069) 返    回：
(0070) --------------------------------------------------------------------*/
(0071) void main(void) 
(0072) {
(0073) 	OC0_OUT_EN;				//为允许PWM工作，需设置PB3为输出
_main:
    0052 9ABB      SBI	0x17,3
(0074) 	timer0_init(); 
    0053 DFF7      RCALL	_timer0_init
(0075) 	SEI(); 
    0054 9478      BSET	7
(0076) 	while(1);
FILE: <library>
    0055 CFFF      RJMP	0x0055
    0056 9508      RET
