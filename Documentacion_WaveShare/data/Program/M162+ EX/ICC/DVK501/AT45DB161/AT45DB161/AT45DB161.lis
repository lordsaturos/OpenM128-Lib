                        .module AT45DB161.C
                        .area text(rom, con, rel)
 0000                   .dbfile ..\..\..\STK162~1.0\AT45DB~1\AT45DB161\AT45DB161.C
 0000                   .dbfile D:\ICC_H\Software.H
 0000                   .dbfunc e speaData _speaData fV
 0000           ;              y -> y+4
 0000           ;              j -> y+0
 0000           ;              i -> R10
 0000           ;            len -> R12
 0000           ;            dat -> y+16
                        .even
 0000           _speaData::
 0000 0E940000          xcall push_arg4
 0004 0E940000          xcall push_xgsetF03C
 0008 2897              sbiw R28,8
 000A CC88              ldd R12,y+20
 000C                   .dbline -1
 000C                   .dbline 116
 000C           ; /*********************************************************************
 000C           ;       微 雪 电 子   WaveShare   http://www.waveShare.net              
 000C           ;                                                                       
 000C           ; 目    的:   建立AVR的软件提取库，增加各类补丁，方便系统程序移植
 000C           ;       
 000C           ; 目标系统:   基于AVR单片机
 000C           ;                                                                               
 000C           ; 应用软件:   ICCAVR
 000C           ;                                                                               
 000C           ; 版    本:   Version 1.0                                                       
 000C           ;                                                                               
 000C           ; 圆版时间:   2005-06-25
 000C           ;       
 000C           ; 开发人员:   SEE
 000C           ; 
 000C           ; 说    明:   若用于商业用途，请保留此段文字或注明代码来源
 000C           ;       
 000C           ;       深 圳 市 微 雪 电 子 有 限 公 司 保 留 所 有 的 版 权     
 000C           ; *********************************************************************/
 000C           ; 
 000C           ; /*01010101010101010101010101010101010101010101010101010101010101010101
 000C           ; ----------------------------------------------------------------------
 000C           ; 版本更新记录：
 000C           ; 
 000C           ; ----------------------------------------------------------------------
 000C           ; 入口参数说明：
 000C           ; 
 000C           ; ----------------------------------------------------------------------
 000C           ; 待定参数说明：
 000C           ; 
 000C           ; ----------------------------------------------------------------------        
 000C           ; 对外变量说明：
 000C           ;     
 000C           ; ----------------------------------------------------------------------
 000C           ; 对外函数说明：
 000C           ;    
 000C           ; ----------------------------------------------------------------------
 000C           ; 10101010101010101010101010101010101010101010101010101010101010101010*/
 000C           ; 
 000C           ; #ifndef Software_H
 000C           ; #define Software_H
 000C           ; 
 000C           ; #include <math.h>
 000C           ; #include <string.h>
 000C           ; 
 000C           ; /* 兼容一般程序员的常用写法 */
 000C           ; typedef unsigned char uchar;
 000C           ; typedef unsigned int  uint;
 000C           ; typedef unsigned long ulong;
 000C           ; typedef signed char           schar;
 000C           ; typedef signed int            sint;
 000C           ; typedef signed long           slong;
 000C           ; 
 000C           ; /* 为方便移植，建议使用下面写法 */
 000C           ; typedef unsigned char bool;
 000C           ; typedef unsigned char uint8;
 000C           ; typedef unsigned int  uint16;
 000C           ; typedef unsigned long   uint32;
 000C           ; typedef signed  char  sint8;
 000C           ; typedef signed        int             sint16;
 000C           ; typedef signed        long    sint32;
 000C           ; typedef signed  char  int8;
 000C           ; typedef signed  int           int16;
 000C           ; typedef signed  long  int32;
 000C           ; 
 000C           ; /* 下面写法一般不推荐 */
 000C           ; //typedef unsigned char ubyte;
 000C           ; //typedef unsigned int        uword;
 000C           ; //typedef unsigned long udword;
 000C           ; //typedef signed   char       sbyte;
 000C           ; //typedef signed   int        sword;
 000C           ; //typedef signed   long       sdword;
 000C           ; 
 000C           ; /* 一般程序定义的默认值 */
 000C           ; //#define NULL                        0
 000C           ; //#define EOF                 -1
 000C           ; //#define TRUE                1
 000C           ; //#define FALSE               0
 000C           ; //#define YES                 1
 000C           ; //#define NO                          0
 000C           ; //#define ON                  1
 000C           ; //#define OFF                 0
 000C           ; //#define ENABLE              1
 000C           ; //#define DISABLE             0
 000C           ; //#define CRR                 1
 000C           ; //#define ERR                 0
 000C           ; //#define RIGHT                       1
 000C           ; //#define WRONG                       0
 000C           ; //#define SUCCESS             1
 000C           ; //#define FAILURE             0
 000C           ; //#define PI                  3.1415926       //3.1415926535897932
 000C           ; 
 000C           ; /* 如果你手头上的RAM实在很紧，不如尝试下面的define～ */
 000C           ; //#define _CALLOC(a)          ( (a *)calloc(n,sizeof(a)) )
 000C           ; //#define _MALLOC(a)          ( (a *)malloc(sizeof(a)) )
 000C           ; //#define _MIN(a,b)                   ( (a) < (b) ? (a) : (b) )
 000C           ; //#define _MAX(a,b)                   ( (a) > (b) ? (a) : (b) )
 000C           ; //#define _EXCHANGE(a,b)      { int t; t=a; a=b; b=t; }
 000C           ; //#define _TOLOWER(c)         ( (c)+32 )
 000C           ; //#define _TOUPPER(c)         ( (c)-32 )
 000C           ; 
 000C           ; //#ifndef BIT
 000C           ; //#define BIT(x)      ( 1<<(x) )
 000C           ; //#endif
 000C           ; 
 000C           ; /*--------------------------------------------------------------------
 000C           ; 函数全称：数据拆字
 000C           ; 函数功能：
 000C           ; 注意事项：D<=999999,C<=6
 000C           ; 提示说明：调用speaData(12,2)，得到dataElem[0]=2，dataElem[1]=1
 000C           ; 输    入：
 000C           ; 返    回：无
 000C           ; --------------------------------------------------------------------*/
 000C           ; uint8 dataElem[6];
 000C           ; void speaData(uint32 dat,sint8 len)
 000C           ; {
 000C                   .dbline 119
 000C           ;     uint8 i;
 000C           ;     uint32 j,y;
 000C           ;     for(i=0,j=1;i<len;i++)
 000C AA24              clr R10
 000E 81E0              ldi R24,1
 0010 8883              std y+0,R24
 0012 80E0              ldi R24,0
 0014 8983              std y+1,R24
 0016 8A83              std y+2,R24
 0018 8B83              std y+3,R24
 001A 3CC0              xjmp L5
 001C           L2:
 001C                   .dbline 120
 001C           ;     {
 001C                   .dbline 121
 001C           ;         y=dat/j;
 001C 2880              ldd R2,y+0
 001E 3980              ldd R3,y+1
 0020 4A80              ldd R4,y+2
 0022 5B80              ldd R5,y+3
 0024 0889              ldd R16,y+16
 0026 1989              ldd R17,y+17
 0028 2A89              ldd R18,y+18
 002A 3B89              ldd R19,y+19
 002C 5A92              st -y,R5
 002E 4A92              st -y,R4
 0030 3A92              st -y,R3
 0032 2A92              st -y,R2
 0034 0E940000          xcall div32u
 0038 0C83              std y+4,R16
 003A 1D83              std y+5,R17
 003C 2E83              std y+6,R18
 003E 3F83              std y+7,R19
 0040                   .dbline 122
 0040           ;         dataElem[i]=y%10;
 0040 4AE0              ldi R20,10
 0042 50E0              ldi R21,0
 0044 60E0              ldi R22,0
 0046 70E0              ldi R23,0
 0048 0C81              ldd R16,y+4
 004A 1D81              ldd R17,y+5
 004C 2E81              ldd R18,y+6
 004E 3F81              ldd R19,y+7
 0050 7A93              st -y,R23
 0052 6A93              st -y,R22
 0054 5A93              st -y,R21
 0056 4A93              st -y,R20
 0058 0E940000          xcall mod32u
 005C 80E0              ldi R24,<_dataElem
 005E 90E0              ldi R25,>_dataElem
 0060 EA2D              mov R30,R10
 0062 FF27              clr R31
 0064 E80F              add R30,R24
 0066 F91F              adc R31,R25
 0068 0083              std z+0,R16
 006A                   .dbline 123
 006A           ;         j*=10;
 006A 2880              ldd R2,y+0
 006C 3980              ldd R3,y+1
 006E 4A80              ldd R4,y+2
 0070 5B80              ldd R5,y+3
 0072 4AE0              ldi R20,10
 0074 50E0              ldi R21,0
 0076 60E0              ldi R22,0
 0078 70E0              ldi R23,0
 007A 5A92              st -y,R5
 007C 4A92              st -y,R4
 007E 3A92              st -y,R3
 0080 2A92              st -y,R2
 0082 8A01              movw R16,R20
 0084 9B01              movw R18,R22
 0086 0E940000          xcall empy32u
 008A 0883              std y+0,R16
 008C 1983              std y+1,R17
 008E 2A83              std y+2,R18
 0090 3B83              std y+3,R19
 0092                   .dbline 124
 0092           ;     }
 0092           L3:
 0092                   .dbline 119
 0092 A394              inc R10
 0094           L5:
 0094                   .dbline 119
 0094 2C2C              mov R2,R12
 0096 3324              clr R3
 0098 27FC              sbrc R2,7
 009A 3094              com R3
 009C 4A2C              mov R4,R10
 009E 5524              clr R5
 00A0 4214              cp R4,R2
 00A2 5304              cpc R5,R3
 00A4 0CF4              brge X1
 00A6 BACF              xjmp L2
 00A8           X1:
 00A8           X0:
 00A8                   .dbline -2
 00A8           L1:
 00A8                   .dbline 0 ; func end
 00A8 2896              adiw R28,8
 00AA 0E940000          xcall pop_xgsetF03C
 00AE 2496              adiw R28,4
 00B0 0895              ret
 00B2                   .dbsym l y 4 l
 00B2                   .dbsym l j 0 l
 00B2                   .dbsym r i 10 c
 00B2                   .dbsym r len 12 C
 00B2                   .dbsym l dat 16 l
 00B2                   .dbend
 00B2                   .dbfile D:\ICC_H\Hardware.H
 00B2                   .dbfunc e delay50us _delay50us fV
 00B2           ;              j -> R20
 00B2           ;              t -> R16,R17
                        .even
 00B2           _delay50us::
 00B2 4A93              st -y,R20
 00B4                   .dbline -1
 00B4                   .dbline 105
 00B4           ; /*********************************************************************
 00B4           ;       微 雪 电 子   WaveShare   http://www.waveShare.net              
 00B4           ;                                                                       
 00B4           ; 目    的:   建立AVR的硬件提取库，增加各类补丁，方便移植
 00B4           ;                                       
 00B4           ; 目标系统:   基于AVR单片机
 00B4           ;                                                                               
 00B4           ; 应用软件:   ICCAVR
 00B4           ;                                                                               
 00B4           ; 版    本:   Version 1.0                                                          
 00B4           ;                                                                               
 00B4           ; 圆版时间:   2005-06-25
 00B4           ;       
 00B4           ; 开发人员:   SEE
 00B4           ; 
 00B4           ; 说    明:   若用于商业用途，请保留此段文字或注明代码来源
 00B4           ;       
 00B4           ;       深 圳 市 微 雪 电 子 有 限 公 司 保 留 所 有 的 版 权     
 00B4           ; *********************************************************************/
 00B4           ; 
 00B4           ; /*01010101010101010101010101010101010101010101010101010101010101010101
 00B4           ; ----------------------------------------------------------------------
 00B4           ; 版本更新记录：
 00B4           ; 
 00B4           ; ----------------------------------------------------------------------
 00B4           ; 入口参数说明：
 00B4           ; 
 00B4           ; ----------------------------------------------------------------------
 00B4           ; 待定参数说明：
 00B4           ; 
 00B4           ; ----------------------------------------------------------------------        
 00B4           ; 对外变量说明：
 00B4           ;     
 00B4           ; ----------------------------------------------------------------------
 00B4           ; 对外函数说明：
 00B4           ;    
 00B4           ; ----------------------------------------------------------------------
 00B4           ; 10101010101010101010101010101010101010101010101010101010101010101010*/
 00B4           ; 
 00B4           ; #ifndef Hardware_H
 00B4           ; #define Hardware_H
 00B4           ; 
 00B4           ; #include <math.h>
 00B4           ; #include <string.h>
 00B4           ; #include <stdio.h>
 00B4           ; #include <macros.h>
 00B4           ; #include <eeprom.h>
 00B4           ; //#include <wdt.h>
 00B4           ; 
 00B4           ; /* TWI configs */
 00B4           ; //如使用ATMEGA162(没有TWI接口)之类的MCU，在加载Hardware.H前，务必加“#define NO_INCLUDE_I2C_H 1”语句
 00B4           ; #if NO_INCLUDE_I2C_H
 00B4           ; ;
 00B4           ; #else
 00B4           ; #include "D:\ICC_H\I2C.H"     //i2c即AVR的"twi"
 00B4           ; #endif
 00B4           ; 
 00B4           ; /* hard configs */
 00B4           ; #ifndef flash
 00B4           ;       #define flash   const
 00B4           ; #endif
 00B4           ; 
 00B4           ; #ifndef code
 00B4           ;       #define code    const
 00B4           ; #endif
 00B4           ; 
 00B4           ; #ifndef NOP
 00B4           ;       #define NOP()   asm("nop")
 00B4           ; #endif
 00B4           ; 
 00B4           ; /* io configs */
 00B4           ; #define sbi(io,bit)           (  io |=  (1<<bit) )    //example: sbi(PORTA,0);sbi(DDRA,0);
 00B4           ; #define cbi(io,bit)           (  io &= ~(1<<bit) )    //example: cbi(PORTA,0);cbi(DDRA,0);
 00B4           ; #define gbi(pin ,bit) ( pin &   (1<<bit) )    //example: gbi(PINA,0);
 00B4           ; 
 00B4           ; /* interrupt configs */
 00B4           ; #define DIS_INT  asm("sei")
 00B4           ; #define EN_INT   asm("cli")
 00B4           ; 
 00B4           ; /* wdt configs */
 00B4           ; #define WDT()    asm("wdr")
 00B4           ; 
 00B4           ; /* bit operation */
 00B4           ; //#ifndef BIT
 00B4           ; //#define BIT(x)      ( 1<<(x) )
 00B4           ; //#endif
 00B4           ; 
 00B4           ; /* USART configs for 4 Mhz crystal */
 00B4           ; //#define BAUD9600                    25
 00B4           ; //#define BAUD19000                   12
 00B4           ; //#define UART_TRAN_ON()      UCR |=  0x08
 00B4           ; //#define UART_TRAN_OFF()     UCR &= ~0x08
 00B4           ; //#define UART_RCV_ON()               UCR |=  0x10
 00B4           ; //#define UART_RCV_OFF()      UCR &= ~0x10
 00B4           ; 
 00B4           ; /*--------------------------------------------------------------------
 00B4           ; 函数全称：50us 延时
 00B4           ; 函数功能：当然是 50us延时 啦
 00B4           ; 注意事项：基于7.3728M晶振，稍微有点误差
 00B4           ; 提示说明：调用delay50us（20），得到1ms延时
 00B4           ; 输    入：    
 00B4           ; 返    回：无 
 00B4           ; --------------------------------------------------------------------*/
 00B4           ; void delay50us(sint16 t)
 00B4           ; {
 00B4                   .dbline 107
 00B4           ;     uint8 j;          
 00B4           ;     for(;t>0;t--)                     
 00B4 07C0              xjmp L10
 00B6           L7:
 00B6                   .dbline 108
 00B6           ;         for(j=0;j<70;j++)     
 00B6 4427              clr R20
 00B8 01C0              xjmp L14
 00BA           L11:
 00BA                   .dbline 109
 00BA           ;             ;
 00BA           L12:
 00BA                   .dbline 108
 00BA 4395              inc R20
 00BC           L14:
 00BC                   .dbline 108
 00BC 4634              cpi R20,70
 00BE E8F3              brlo L11
 00C0           X2:
 00C0           L8:
 00C0                   .dbline 107
 00C0 0150              subi R16,1
 00C2 1040              sbci R17,0
 00C4           L10:
 00C4                   .dbline 107
 00C4 2224              clr R2
 00C6 3324              clr R3
 00C8 2016              cp R2,R16
 00CA 3106              cpc R3,R17
 00CC A4F3              brlt L7
 00CE           X3:
 00CE                   .dbline -2
 00CE           L6:
 00CE                   .dbline 0 ; func end
 00CE 4991              ld R20,y+
 00D0 0895              ret
 00D2                   .dbsym r j 20 c
 00D2                   .dbsym r t 16 I
 00D2                   .dbend
 00D2                   .dbfunc e delay50ms _delay50ms fV
 00D2           ;              i -> R20,R21
 00D2           ;              t -> R16,R17
                        .even
 00D2           _delay50ms::
 00D2 4A93              st -y,R20
 00D4 5A93              st -y,R21
 00D6                   .dbline -1
 00D6                   .dbline 120
 00D6           ; }
 00D6           ; /*--------------------------------------------------------------------
 00D6           ; 函数全称：50ms 延时
 00D6           ; 函数功能：当然是 50ms延时 啦
 00D6           ; 注意事项：基于7.3728M晶振，稍微有点误差
 00D6           ; 提示说明：调用delay50ms（20），得到1s延时 
 00D6           ; 输    入：
 00D6           ; 返    回：无
 00D6           ; --------------------------------------------------------------------*/
 00D6           ; void delay50ms(sint16 t)
 00D6           ; {
 00D6                   .dbline 122
 00D6           ;       uint16 i; 
 00D6           ;       for(;t>0;t--)
 00D6 13C0              xjmp L19
 00D8           L16:
 00D8                   .dbline 123
 00D8           ;               for(i=0;i<52642;i++)
 00D8 4427              clr R20
 00DA 5527              clr R21
 00DC 02C0              xjmp L23
 00DE           L20:
 00DE                   .dbline 124
 00DE           ;                       ; 
 00DE           L21:
 00DE                   .dbline 123
 00DE 4F5F              subi R20,255  ; offset = 1
 00E0 5F4F              sbci R21,255
 00E2           L23:
 00E2                   .dbline 123
 00E2 82EA              ldi R24,162
 00E4 9DEC              ldi R25,205
 00E6 A0E0              ldi R26,0
 00E8 B0E0              ldi R27,0
 00EA 1A01              movw R2,R20
 00EC 4424              clr R4
 00EE 5524              clr R5
 00F0 2816              cp R2,R24
 00F2 3906              cpc R3,R25
 00F4 4A06              cpc R4,R26
 00F6 5B06              cpc R5,R27
 00F8 94F3              brlt L20
 00FA           X4:
 00FA           L17:
 00FA                   .dbline 122
 00FA 0150              subi R16,1
 00FC 1040              sbci R17,0
 00FE           L19:
 00FE                   .dbline 122
 00FE 2224              clr R2
 0100 3324              clr R3
 0102 2016              cp R2,R16
 0104 3106              cpc R3,R17
 0106 44F3              brlt L16
 0108           X5:
 0108                   .dbline -2
 0108           L15:
 0108                   .dbline 0 ; func end
 0108 5991              ld R21,y+
 010A 4991              ld R20,y+
 010C 0895              ret
 010E                   .dbsym r i 20 i
 010E                   .dbsym r t 16 I
 010E                   .dbend
 010E                   .dbfunc e delayus _delayus fV
 010E           ;              i -> R20,R21
 010E           ;              t -> R16,R17
                        .even
 010E           _delayus::
 010E 4A93              st -y,R20
 0110 5A93              st -y,R21
 0112                   .dbline -1
 0112                   .dbline 129
 0112           ; }
 0112           ; 
 0112           ; 
 0112           ; void delayus(uint16 t)
 0112           ; {
 0112                   .dbline 131
 0112           ;       uint16 i;
 0112           ;       for(i=0;i<t;i++)
 0112 4427              clr R20
 0114 5527              clr R21
 0116 02C0              xjmp L28
 0118           L25:
 0118                   .dbline 132
 0118           ;               {
 0118                   .dbline 135
 0118           ;                       //asm("NOP\n");
 0118           ;                       //asm("NOP\n");
 0118           ;               }
 0118           L26:
 0118                   .dbline 131
 0118 4F5F              subi R20,255  ; offset = 1
 011A 5F4F              sbci R21,255
 011C           L28:
 011C                   .dbline 131
 011C 4017              cp R20,R16
 011E 5107              cpc R21,R17
 0120 D8F3              brlo L25
 0122           X6:
 0122                   .dbline -2
 0122           L24:
 0122                   .dbline 0 ; func end
 0122 5991              ld R21,y+
 0124 4991              ld R20,y+
 0126 0895              ret
 0128                   .dbsym r i 20 i
 0128                   .dbsym r t 16 i
 0128                   .dbend
 0128                   .dbfile D:\ICC_H\AT45DB161.H
 0128                   .dbfunc e spi_init _spi_init fV
                        .even
 0128           _spi_init::
 0128                   .dbline -1
 0128                   .dbline 24
 0128           ; /*********************************************************************
 0128           ;       微 雪 电 子   WaveShare   http://www.waveShare.net              
 0128           ;                                                                       
 0128           ; 目    的:   建立使用AT45DB161的示例程序
 0128           ;       
 0128           ; 目标系统:   基于AVR单片机
 0128           ;                                                                               
 0128           ; 应用软件:   ICCAVR
 0128           ;                                                                               
 0128           ; 版    本:   Version 1.0                                                          
 0128           ;                                                                               
 0128           ; 圆版时间:   2005-03-1
 0128           ;       
 0128           ; 开发人员:   SEE
 0128           ; 
 0128           ; 说    明:   若用于商业用途，请保留此段文字或注明代码来源
 0128           ;       
 0128           ;       深 圳 市 微 雪 电 子 有 限 公 司 保 留 所 有 的 版 权     
 0128           ; *********************************************************************/
 0128           ; /*01010101010101010101010101010101010101010101010101010101010101010101
 0128           ; --------------------------------------------------------------------*/                        
 0128           ; //==================================                                  
 0128           ; void spi_init(void)
 0128           ; {
 0128                   .dbline 25
 0128           ;       SPCR=0x5C;    
 0128 8CE5              ldi R24,92
 012A 8DB9              out 0xd,R24
 012C                   .dbline -2
 012C           L29:
 012C                   .dbline 0 ; func end
 012C 0895              ret
 012E                   .dbend
 012E                   .dbfunc e spi_transmit_byte _spi_transmit_byte fV
 012E           ;           Data -> R16
                        .even
 012E           _spi_transmit_byte::
 012E                   .dbline -1
 012E                   .dbline 29
 012E           ; }
 012E           ; //==================================
 012E           ; void spi_transmit_byte(uchar Data)
 012E           ; {     
 012E                   .dbline 30
 012E           ;       SPDR=Data;                                                              
 012E 0FB9              out 0xf,R16
 0130           L31:
 0130                   .dbline 31
 0130           ;     while(!(SPSR&0x80));
 0130           L32:
 0130                   .dbline 31
 0130 779B              sbis 0xe,7
 0132 FECF              rjmp L31
 0134           X7:
 0134                   .dbline -2
 0134           L30:
 0134                   .dbline 0 ; func end
 0134 0895              ret
 0136                   .dbsym r Data 16 c
 0136                   .dbend
 0136                   .dbfunc e write_buffer _write_buffer fV
 0136           ;           data -> R10
 0136           ;   BufferOffset -> R12,R13
                        .even
 0136           _write_buffer::
 0136 0E940000          xcall push_xgset003C
 013A A22E              mov R10,R18
 013C 6801              movw R12,R16
 013E                   .dbline -1
 013E                   .dbline 35
 013E           ; }
 013E           ; //============================================================
 013E           ; void write_buffer(uint BufferOffset,uchar data)
 013E           ; {                                     
 013E                   .dbline 36
 013E           ;       spi_transmit_byte(0x84);                                                                        
 013E 04E8              ldi R16,132
 0140 F6DF              xcall _spi_transmit_byte
 0142                   .dbline 37
 0142           ;       spi_transmit_byte(0xff);                                                
 0142 0FEF              ldi R16,255
 0144 F4DF              xcall _spi_transmit_byte
 0146                   .dbline 38
 0146           ;       spi_transmit_byte(BufferOffset>>8);     
 0146 8601              movw R16,R12
 0148 012F              mov R16,R17
 014A 1127              clr R17
 014C F0DF              xcall _spi_transmit_byte
 014E                   .dbline 39
 014E           ;       spi_transmit_byte(BufferOffset);                
 014E 0C2D              mov R16,R12
 0150 EEDF              xcall _spi_transmit_byte
 0152                   .dbline 40
 0152           ;       spi_transmit_byte(data);                        
 0152 0A2D              mov R16,R10
 0154 ECDF              xcall _spi_transmit_byte
 0156                   .dbline -2
 0156           L34:
 0156                   .dbline 0 ; func end
 0156 0C940000          xjmp pop_xgset003C
 015A                   .dbsym r data 10 c
 015A                   .dbsym r BufferOffset 12 i
 015A                   .dbend
 015A                   .dbfunc e read_buffer _read_buffer fc
 015A           ;           temp -> R10
 015A           ;   BufferOffset -> R10,R11
                        .even
 015A           _read_buffer::
 015A AA92              st -y,R10
 015C BA92              st -y,R11
 015E 5801              movw R10,R16
 0160                   .dbline -1
 0160                   .dbline 44
 0160           ; }
 0160           ; //================================================================
 0160           ; uchar read_buffer(uint BufferOffset)
 0160           ; {             
 0160                   .dbline 46
 0160           ;     uchar temp;               
 0160           ;       spi_transmit_byte(0x54);                        
 0160 04E5              ldi R16,84
 0162 E5DF              xcall _spi_transmit_byte
 0164                   .dbline 47
 0164           ;       spi_transmit_byte(0xff);                                                
 0164 0FEF              ldi R16,255
 0166 E3DF              xcall _spi_transmit_byte
 0168                   .dbline 48
 0168           ;       spi_transmit_byte(BufferOffset>>8);     
 0168 8501              movw R16,R10
 016A 012F              mov R16,R17
 016C 1127              clr R17
 016E DFDF              xcall _spi_transmit_byte
 0170                   .dbline 49
 0170           ;       spi_transmit_byte(BufferOffset);                
 0170 0A2D              mov R16,R10
 0172 DDDF              xcall _spi_transmit_byte
 0174                   .dbline 50
 0174           ;       spi_transmit_byte(0xff);                                                
 0174 0FEF              ldi R16,255
 0176 DBDF              xcall _spi_transmit_byte
 0178                   .dbline 51
 0178           ;       spi_transmit_byte(0xff);                                        
 0178 0FEF              ldi R16,255
 017A D9DF              xcall _spi_transmit_byte
 017C                   .dbline 52
 017C           ;       temp=SPDR;        
 017C AFB0              in R10,0xf
 017E                   .dbline 53
 017E           ;     return temp;                                                              
 017E 0A2D              mov R16,R10
 0180                   .dbline -2
 0180           L35:
 0180                   .dbline 0 ; func end
 0180 B990              ld R11,y+
 0182 A990              ld R10,y+
 0184 0895              ret
 0186                   .dbsym r temp 10 c
 0186                   .dbsym r BufferOffset 10 i
 0186                   .dbend
 0186                   .dbfile E:\吴泽备份\DVK501光盘内容\STK162~1.0\AT45DB~1\AT45DB161\AT45DB161.C
 0186                   .dbfunc e port_init _port_init fV
                        .even
 0186           _port_init::
 0186                   .dbline -1
 0186                   .dbline 50
 0186           ; /*********************************************************************
 0186           ;       微 雪 电 子   WaveShare   http://www.waveShare.net              
 0186           ;                                                                       
 0186           ; 目    的:   建立使用AT45DBxx的示例程序
 0186           ;       
 0186           ; 目标系统:   基于AVR单片机
 0186           ;                                                                               
 0186           ; 应用软件:   ICCAVR
 0186           ;                                                                               
 0186           ; 版    本:   Version 1.0                                                          
 0186           ;                                                                               
 0186           ; 圆版时间:   2005-03-1
 0186           ;       
 0186           ; 开发人员:   SEE
 0186           ; 
 0186           ; 说    明:   若用于商业用途，请保留此段文字或注明代码来源
 0186           ;       
 0186           ;       深 圳 市 微 雪 电 子 有 限 公 司 保 留 所 有 的 版 权     
 0186           ; *********************************************************************/
 0186           ; 
 0186           ; /*01010101010101010101010101010101010101010101010101010101010101010101
 0186           ; ----------------------------------------------------------------------
 0186           ; 硬件连接：      DVK500                                 STK162+
 0186           ;                               VCC             ---------         VCC
 0186           ;                               GND             ---------         GND
 0186           ;                               RST             ---------         VCC
 0186           ;                               WP              ---------         VCC           
 0186           ;                               CS              ---------         PB4
 0186           ;                               SI              ---------         PB5
 0186           ;                               SO              ---------         PB6
 0186           ;                               SCK             ---------         PB7
 0186           ; ----------------------------------------------------------------------
 0186           ; 实验内容：
 0186           ; 把256个数据写入dataflash缓存器1，再读出，使用PA口的LED做指示，观测是否与写入一致。
 0186           ; 由于其命令较多，这里不作详细介绍，其它读写方式可参照本示例程序
 0186           ; ---------------------------------------------------------------------
 0186           ; ----------------------------------------------------------------------
 0186           ; 注意事项： 
 0186           ; （1）若有加载库函数，请将光盘根目录下的“库函数”下的“ICC_H”文件夹拷到D盘
 0186           ; （2）请详细阅读“使用必读”及相关资料。
 0186           ; ----------------------------------------------------------------------
 0186           ; 10101010101010101010101010101010101010101010101010101010101010101010*/
 0186           ; #include <iom162v.h>
 0186           ; #define NO_INCLUDE_I2C_H 1
 0186           ; 
 0186           ; #include <macros.h>
 0186           ; #include "D:\ICC_H\CmmICC.H"
 0186           ; #include "D:\ICC_H\AT45DB161.H"        
 0186           ; void port_init(void)
 0186           ; {
 0186                   .dbline 51
 0186           ;     PORTA = 0x00;
 0186 2224              clr R2
 0188 2BBA              out 0x1b,R2
 018A                   .dbline 52
 018A           ;     DDRA  = 0xff;
 018A 8FEF              ldi R24,255
 018C 8ABB              out 0x1a,R24
 018E                   .dbline 53
 018E           ;     PORTB = 0xff;
 018E 88BB              out 0x18,R24
 0190                   .dbline 54
 0190           ;     DDRB  = 0xbf;
 0190 8FEB              ldi R24,191
 0192 87BB              out 0x17,R24
 0194                   .dbline 55
 0194           ;     PORTC = 0x00;
 0194 25BA              out 0x15,R2
 0196                   .dbline 56
 0196           ;     DDRC  = 0xff;
 0196 8FEF              ldi R24,255
 0198 84BB              out 0x14,R24
 019A                   .dbline 57
 019A           ;     PORTD = 0x00;
 019A 22BA              out 0x12,R2
 019C                   .dbline 58
 019C           ;     DDRD  = 0xff;   
 019C 81BB              out 0x11,R24
 019E                   .dbline -2
 019E           L36:
 019E                   .dbline 0 ; func end
 019E 0895              ret
 01A0                   .dbend
 01A0                   .dbfunc e main _main fV
 01A0           ;              i -> R20
                        .even
 01A0           _main::
 01A0                   .dbline -1
 01A0                   .dbline 62
 01A0           ; }
 01A0           ; 
 01A0           ; void main(void)
 01A0           ; {     
 01A0                   .dbline 64
 01A0           ;       unsigned char i;
 01A0           ;       port_init();  
 01A0 F2DF              xcall _port_init
 01A2                   .dbline 65
 01A2           ;     spi_init();  
 01A2 C2DF              xcall _spi_init
 01A4                   .dbline 67
 01A4           ; 
 01A4           ;     PORTB&=0xfb;      //PB2为低        rst
 01A4 88B3              in R24,0x18
 01A6 8B7F              andi R24,251
 01A8 88BB              out 0x18,R24
 01AA                   .dbline 68
 01AA           ;     delay50ms(1); 
 01AA 01E0              ldi R16,1
 01AC 10E0              ldi R17,0
 01AE 91DF              xcall _delay50ms
 01B0                   .dbline 69
 01B0           ;     PORTB|=0x08;          //PB3为高        wp
 01B0 C39A              sbi 0x18,3
 01B2                   .dbline 71
 01B2           ;                 
 01B2           ;     PORTB|=0x04;     //  //PB2为高        rst          
 01B2 C29A              sbi 0x18,2
 01B4                   .dbline 72
 01B4           ;     for(i=0;i<255;i++)
 01B4 4427              clr R20
 01B6 0CC0              xjmp L41
 01B8           L38:
 01B8                   .dbline 73
 01B8           ;     {  
 01B8                   .dbline 74
 01B8           ;         PORTB&=0xef;     //PB4为低      cs
 01B8 88B3              in R24,0x18
 01BA 8F7E              andi R24,239
 01BC 88BB              out 0x18,R24
 01BE                   .dbline 75
 01BE           ;         write_buffer(i,i);        //把256个数据写入dataflash缓存器 
 01BE 242F              mov R18,R20
 01C0 042F              mov R16,R20
 01C2 1127              clr R17
 01C4 B8DF              xcall _write_buffer
 01C6                   .dbline 76
 01C6           ;       PORTB|=0x10;        //  PB4为高     cs
 01C6 C49A              sbi 0x18,4
 01C8                   .dbline 77
 01C8           ;               delay50us(2);
 01C8 02E0              ldi R16,2
 01CA 10E0              ldi R17,0
 01CC 72DF              xcall _delay50us
 01CE                   .dbline 78
 01CE           ;     }                                                    
 01CE           L39:
 01CE                   .dbline 72
 01CE 4395              inc R20
 01D0           L41:
 01D0                   .dbline 72
 01D0 4F3F              cpi R20,255
 01D2 90F3              brlo L38
 01D4           X8:
 01D4                   .dbline 79
 01D4           ;       for(i=0;i<255;i++)           //从dataflash缓存器把256个数据读出
 01D4 4427              clr R20
 01D6 0CC0              xjmp L45
 01D8           L42:
 01D8                   .dbline 80
 01D8           ;       {       
 01D8                   .dbline 81
 01D8           ;       PORTB&=0xef;    
 01D8 88B3              in R24,0x18
 01DA 8F7E              andi R24,239
 01DC 88BB              out 0x18,R24
 01DE                   .dbline 82
 01DE           ;               PORTA=read_buffer(i);           //通过PA口作显示      
 01DE 042F              mov R16,R20
 01E0 1127              clr R17
 01E2 BBDF              xcall _read_buffer
 01E4 0BBB              out 0x1b,R16
 01E6                   .dbline 83
 01E6           ;         PORTB|=0x10;  
 01E6 C49A              sbi 0x18,4
 01E8                   .dbline 84
 01E8           ;               delay50ms(5);
 01E8 05E0              ldi R16,5
 01EA 10E0              ldi R17,0
 01EC 72DF              xcall _delay50ms
 01EE                   .dbline 85
 01EE           ;       }    
 01EE           L43:
 01EE                   .dbline 79
 01EE 4395              inc R20
 01F0           L45:
 01F0                   .dbline 79
 01F0 4F3F              cpi R20,255
 01F2 90F3              brlo L42
 01F4           X9:
 01F4                   .dbline 86
 01F4           ;     PORTB&=0xf7;
 01F4 88B3              in R24,0x18
 01F6 877F              andi R24,247
 01F8 88BB              out 0x18,R24
 01FA           L46:
 01FA                   .dbline 87
 01FA           ;       while(1);
 01FA           L47:
 01FA                   .dbline 87
 01FA FFCF              xjmp L46
 01FC           X10:
 01FC                   .dbline -2
 01FC           L37:
 01FC                   .dbline 0 ; func end
 01FC 0895              ret
 01FE                   .dbsym r i 20 c
 01FE                   .dbend
                        .area bss(ram, con, rel)
 0000                   .dbfile E:\吴泽备份\DVK501光盘内容\STK162~1.0\AT45DB~1\AT45DB161\AT45DB161.C
 0000           _dataElem::
 0000                   .blkb 6
 0006                   .dbfile D:\ICC_H\Software.H
 0006                   .dbsym e dataElem _dataElem A[6:6]c
 0006           ; }
