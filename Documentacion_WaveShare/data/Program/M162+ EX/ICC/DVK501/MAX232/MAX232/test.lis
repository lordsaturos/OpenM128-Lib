                        .module test.c
                        .area text(rom, con, rel)
 0000                   .dbfile ..\..\..\STK162~1.0\MAX232~1\MAX232\test.c
 0000                   .dbfile E:\吴泽备份\DVK501光盘内容\STK162~1.0\MAX232~1\MAX232\test.c
 0000                   .dbfunc e UART_init _UART_init fV
                        .even
 0000           _UART_init::
 0000                   .dbline -1
 0000                   .dbline 52
 0000           ; /*********************************************************************
 0000           ;       微 雪 电 子   WaveShare   http://www.waveShare.net              
 0000           ;                                                                       
 0000           ; 目    的:   建立使用PCF8574的示例程序
 0000           ;       
 0000           ; 目标系统:   基于AVR单片机
 0000           ;                                                                               
 0000           ; 应用软件:   ICCAVR
 0000           ;                                                                               
 0000           ; 版    本:   Version 1.0                                                          
 0000           ;                                                                               
 0000           ; 圆版时间:   2009-03-31
 0000           ;       
 0000           ; 开发人员:   zz
 0000           ; 
 0000           ; 说    明:   若用于商业用途，请保留此段文字或注明代码来源
 0000           ;       
 0000           ;       深 圳 市 微 雪 电 子 有 限 公 司 保 留 所 有 的 版 权     
 0000           ; *********************************************************************/
 0000           ; 
 0000           ; /*01010101010101010101010101010101010101010101010101010101010101010101
 0000           ; ----------------------------------------------------------------------
 0000           ; 版本更新记录：
 0000           ; 
 0000           ; ----------------------------------------------------------------------
 0000           ; 实验内容：
 0000           ; 先把写数据并显示在MAX232自发自收试验
 0000           ; ----------------------------------------------------------------------
 0000           ; 硬件连接：
 0000           ; 
 0000           ;       
 0000           ;            M162+ EX                     DVK501
 0000           ;                          PA   ---------                 LED0~7
 0000           ;                          
 0000           ;                          DVK501                                 M162+ EX
 0000           ;                               VCC             ---------         VCC
 0000           ;                               GND             ---------         GND
 0000           ;                               RXD1   ---------          PE1(TXD0)
 0000           ;                               TXD1    ---------         PE0(RXD0)
 0000           ;                               
 0000           ;                               并将DB9接口的2脚和3脚短接
 0000           ;                               
 0000           ; ----------------------------------------------------------------------
 0000           ; 注意事项： 
 0000           ; （1）若有加载库函数，请将光盘根目录下的“库函数”下的“ICC_H”文件夹拷到D盘
 0000           ; （2）请详细阅读“使用必读”及相关资料。
 0000           ; ----------------------------------------------------------------------
 0000           ; 10101010101010101010101010101010101010101010101010101010101010101010*/
 0000           ; 
 0000           ; #include <iom162v.h>
 0000           ; void UART_init(void)
 0000           ; {
 0000                   .dbline 59
 0000           ; // USART0 initialization
 0000           ; // Communication Parameters: 8 Data, 1 Stop, No Parity
 0000           ; // USART0 Receiver: On
 0000           ; // USART0 Transmitter: On
 0000           ; // USART0 Mode: Asynchronous
 0000           ; // USART0 Baud Rate: 9600
 0000           ; UCSR0A=0x00;
 0000 2224              clr R2
 0002 2BB8              out 0xb,R2
 0004                   .dbline 60
 0004           ; UCSR0B=0x18;
 0004 88E1              ldi R24,24
 0006 8AB9              out 0xa,R24
 0008                   .dbline 61
 0008           ; UCSR0C=0x06;
 0008 86E0              ldi R24,6
 000A 80BD              out 0x20,R24
 000C                   .dbline 62
 000C           ; UBRR0H=0x00;
 000C 20BC              out 0x20,R2
 000E                   .dbline 63
 000E           ; UBRR0L=0x2F;
 000E 8FE2              ldi R24,47
 0010 89B9              out 0x9,R24
 0012                   .dbline -2
 0012           L1:
 0012                   .dbline 0 ; func end
 0012 0895              ret
 0014                   .dbend
 0014                   .dbfunc e uart_putchar0 _uart_putchar0 fV
 0014           ;              c -> R16
                        .even
 0014           _uart_putchar0::
 0014                   .dbline -1
 0014                   .dbline 69
 0014           ; }
 0014           ; 
 0014           ; 
 0014           ; //从RS232发送一个字节 
 0014           ; void uart_putchar0(char c) 
 0014           ; { 
 0014           L3:
 0014                   .dbline 70
 0014           ;     while(!(UCSR0A & 0x20));
 0014           L4:
 0014                   .dbline 70
 0014 5D9B              sbis 0xb,5
 0016 FECF              rjmp L3
 0018           X0:
 0018                   .dbline 71
 0018           ;     UDR0 = c; 
 0018 0CB9              out 0xc,R16
 001A                   .dbline -2
 001A           L2:
 001A                   .dbline 0 ; func end
 001A 0895              ret
 001C                   .dbsym r c 16 c
 001C                   .dbend
 001C                   .dbfunc e uart_getchar0 _uart_getchar0 fi
 001C           ;            res -> R16
 001C           ;         status -> R18
                        .even
 001C           _uart_getchar0::
 001C                   .dbline -1
 001C                   .dbline 75
 001C           ; } 
 001C           ; //从RS232接收一个字节 
 001C           ; unsigned int uart_getchar0(void) 
 001C           ; { 
 001C                   .dbline 77
 001C           ;     unsigned char status,res; 
 001C           ;     if(!(UCSR0A & 0x80)) return -1;        //no data to be received 
 001C 5F99              sbic 0xb,7
 001E 03C0              rjmp L7
 0020           X1:
 0020                   .dbline 77
 0020 0FEF              ldi R16,65535
 0022 1FEF              ldi R17,255
 0024 09C0              xjmp L6
 0026           L7:
 0026                   .dbline 78
 0026           ;     status = UCSR0A; 
 0026 2BB1              in R18,0xb
 0028                   .dbline 79
 0028           ;     res = UDR0; 
 0028 0CB1              in R16,0xc
 002A                   .dbline 80
 002A           ;     if (status & 0x1c) return -1;        // If error, return -1 
 002A 822F              mov R24,R18
 002C 8C71              andi R24,28
 002E 19F0              breq L9
 0030           X2:
 0030                   .dbline 80
 0030 0FEF              ldi R16,65535
 0032 1FEF              ldi R17,255
 0034 01C0              xjmp L6
 0036           L9:
 0036                   .dbline 81
 0036           ;     return res; 
 0036 1127              clr R17
 0038                   .dbline -2
 0038           L6:
 0038                   .dbline 0 ; func end
 0038 0895              ret
 003A                   .dbsym r res 16 c
 003A                   .dbsym r status 18 c
 003A                   .dbend
 003A                   .dbfunc e uart_waitchar0 _uart_waitchar0 fc
 003A           ;              c -> R10,R11
                        .even
 003A           _uart_waitchar0::
 003A AA92              st -y,R10
 003C BA92              st -y,R11
 003E                   .dbline -1
 003E                   .dbline 85
 003E           ; } 
 003E           ; //等待从RS232接收一个有效的字节 
 003E           ; unsigned char uart_waitchar0(void) 
 003E           ; { 
 003E           L12:
 003E                   .dbline 87
 003E           ;     unsigned int c; 
 003E           ;     while((c=uart_getchar0())==-1); 
 003E           L13:
 003E                   .dbline 87
 003E EEDF              xcall _uart_getchar0
 0040 5801              movw R10,R16
 0042 0F3F              cpi R16,255
 0044 EFEF              ldi R30,255
 0046 1E07              cpc R17,R30
 0048 D1F3              breq L12
 004A           X3:
 004A                   .dbline 88
 004A           ;     return (unsigned char)c; 
 004A                   .dbline -2
 004A           L11:
 004A                   .dbline 0 ; func end
 004A B990              ld R11,y+
 004C A990              ld R10,y+
 004E 0895              ret
 0050                   .dbsym r c 10 i
 0050                   .dbend
 0050                   .dbfunc e main _main fV
                        .even
 0050           _main::
 0050                   .dbline -1
 0050                   .dbline 92
 0050           ; } 
 0050           ; 
 0050           ; void main(void)
 0050           ; {
 0050                   .dbline 93
 0050           ;       DDRA=0xFF;
 0050 8FEF              ldi R24,255
 0052 8ABB              out 0x1a,R24
 0054                   .dbline 94
 0054           ;       UART_init();
 0054 D5DF              xcall _UART_init
 0056                   .dbline 95
 0056           ;       uart_putchar0(0xAA);
 0056 0AEA              ldi R16,170
 0058 DDDF              xcall _uart_putchar0
 005A                   .dbline 97
 005A           ;       
 005A           ;       PORTA=uart_waitchar0();
 005A EFDF              xcall _uart_waitchar0
 005C 0BBB              out 0x1b,R16
 005E           L16:
 005E                   .dbline 98
 005E           ;       while(1);
 005E           L17:
 005E                   .dbline 98
 005E FFCF              xjmp L16
 0060           X4:
 0060                   .dbline -2
 0060           L15:
 0060                   .dbline 0 ; func end
 0060 0895              ret
 0062                   .dbend
 0062           ; }
